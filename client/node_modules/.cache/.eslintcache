[{"/Users/semen/Desktop/Organaizer Application/client/src/index.js":"1","/Users/semen/Desktop/Organaizer Application/client/src/App.js":"2","/Users/semen/Desktop/Organaizer Application/client/src/components/Navbar/Navbar.jsx":"3","/Users/semen/Desktop/Organaizer Application/client/src/pages/AuthPage/AuthPage.jsx":"4","/Users/semen/Desktop/Organaizer Application/client/src/pages/RegistrationPage/RegistrationPage.jsx":"5","/Users/semen/Desktop/Organaizer Application/client/src/routes.js":"6","/Users/semen/Desktop/Organaizer Application/client/src/pages/MainPage/MainPage.jsx":"7","/Users/semen/Desktop/Organaizer Application/client/src/hooks/auth.hook.js":"8","/Users/semen/Desktop/Organaizer Application/client/src/context/AuthContext.js":"9","/Users/semen/Desktop/Organaizer Application/client/src/pages/GroupsPage/GroupsPage.jsx":"10","/Users/semen/Desktop/Organaizer Application/client/src/pages/AllGroups/AllGroups.jsx":"11","/Users/semen/Desktop/Organaizer Application/client/src/pages/SharedTasks/SharedTasks.jsx":"12"},{"size":255,"mtime":1674652272489,"results":"13","hashOfConfig":"14"},{"size":707,"mtime":1674654675695,"results":"15","hashOfConfig":"14"},{"size":948,"mtime":1674638596757,"results":"16","hashOfConfig":"14"},{"size":2664,"mtime":1674478027872,"results":"17","hashOfConfig":"14"},{"size":2625,"mtime":1674508377008,"results":"18","hashOfConfig":"14"},{"size":1189,"mtime":1674640442178,"results":"19","hashOfConfig":"14"},{"size":5167,"mtime":1674650592658,"results":"20","hashOfConfig":"14"},{"size":941,"mtime":1674466593122,"results":"21","hashOfConfig":"14"},{"size":100,"mtime":1674464028920,"results":"22","hashOfConfig":"14"},{"size":3855,"mtime":1674728110537,"results":"23","hashOfConfig":"14"},{"size":2663,"mtime":1674726576378,"results":"24","hashOfConfig":"14"},{"size":6823,"mtime":1674728214509,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yaryj8",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/semen/Desktop/Organaizer Application/client/src/index.js",[],[],"/Users/semen/Desktop/Organaizer Application/client/src/App.js",[],[],"/Users/semen/Desktop/Organaizer Application/client/src/components/Navbar/Navbar.jsx",[],[],"/Users/semen/Desktop/Organaizer Application/client/src/pages/AuthPage/AuthPage.jsx",[],[],"/Users/semen/Desktop/Organaizer Application/client/src/pages/RegistrationPage/RegistrationPage.jsx",[],[],"/Users/semen/Desktop/Organaizer Application/client/src/routes.js",[],[],"/Users/semen/Desktop/Organaizer Application/client/src/pages/MainPage/MainPage.jsx",[],[],[],"/Users/semen/Desktop/Organaizer Application/client/src/hooks/auth.hook.js",[],[],[],"/Users/semen/Desktop/Organaizer Application/client/src/context/AuthContext.js",[],[],"/Users/semen/Desktop/Organaizer Application/client/src/pages/GroupsPage/GroupsPage.jsx",["66"],[],"/Users/semen/Desktop/Organaizer Application/client/src/pages/AllGroups/AllGroups.jsx",["67","68"],[],"import React, {useState} from 'react'\nimport './AllGroups.scss'\nimport axios from 'axios'\nimport { useEffect, useContext} from 'react'\nimport { AuthContext } from '../../context/AuthContext'\n\nconst AllGroups = () => {\n\n    const [groups, setGroups] = useState([])\n    const {userId} = useContext(AuthContext)\n\nconst getGroups = async () =>{\n    try {\n        await axios.get('api/groups', {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            params: {userId}\n        })\n        .then((response) => setGroups(response.data))\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nconst applyGroup = async(id) => {\n    try {\n        await axios.put(`api/groups/groups/${id}`, {id, userId}, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(response => {\n            setGroups([...groups], response.data)\n            getGroups()\n        })\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nuseEffect(() => {\n    getGroups()\n}, [])\n\n\nreturn(\n    <div className='container'>\n        <div className='main-page'>\n\n        <h3>All groups</h3>\n            <div className=\"todos\">\n                {\n                    groups.map((groups, index) => {\n                        let cls = [\"col todos-text\"]\n                        var isInGroup = false\n                        groups.users.forEach(function(item){\n                            if(item.userId == userId){\n                                isInGroup = !isInGroup\n                            }\n                        })\n                        console.log(groups.users)\n                        if(isInGroup){\n                            cls.push(\"green-text\")\n\n                            isInGroup = true\n                        }\n                        console.log(isInGroup)\n                        return(\n                            \n                        <div className=\"row flex todos-item\" key={index}>\n                            <div className=\"col todos-num\">{index+1}</div>\n                            <div className={cls.join(' ')}>{groups.groupName}</div>\n                           {isInGroup ? (<div className=\"col todos-buttons\">You are already in this group</div>) : (<div className=\"col todos-buttons blue-text\" onClick={() => applyGroup(groups._id)}>Apply to a group</div>)}\n                            \n                </div>\n                    )}\n                    )}\n                    <div className='col todos-text'>Green groups are your current groups</div>\n            </div>\n            \n        </div>\n        \n    </div>\n)\n\n}\n\nexport default AllGroups\n",[],"/Users/semen/Desktop/Organaizer Application/client/src/pages/SharedTasks/SharedTasks.jsx",["69","70"],[],{"ruleId":"71","severity":1,"message":"72","line":60,"column":8,"nodeType":"73","endLine":60,"endColumn":18,"suggestions":"74"},{"ruleId":"71","severity":1,"message":"75","line":44,"column":4,"nodeType":"73","endLine":44,"endColumn":6,"suggestions":"76"},{"ruleId":"77","severity":1,"message":"78","line":58,"column":44,"nodeType":"79","messageId":"80","endLine":58,"endColumn":46},{"ruleId":"81","severity":1,"message":"82","line":20,"column":28,"nodeType":"83","messageId":"84","endLine":20,"endColumn":30},{"ruleId":"71","severity":1,"message":"85","line":123,"column":8,"nodeType":"73","endLine":123,"endColumn":17,"suggestions":"86"},"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'userId'. Either include it or remove the dependency array.","ArrayExpression",["87"],"React Hook useEffect has a missing dependency: 'getGroups'. Either include it or remove the dependency array.",["88"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'getGroup'. Either include it or remove the dependency array.",["89"],{"desc":"90","fix":"91"},{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},"Update the dependencies array to be: [getGroup, userId]",{"range":"96","text":"97"},"Update the dependencies array to be: [getGroups]",{"range":"98","text":"99"},"Update the dependencies array to be: [getGroup, getTodo]",{"range":"100","text":"101"},[1820,1830],"[getGroup, userId]",[1050,1052],"[getGroups]",[3619,3628],"[getGroup, getTodo]"]