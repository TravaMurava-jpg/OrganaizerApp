{"ast":null,"code":"var _jsxFileName = \"/Users/semen/Desktop/Organaizer Application/client/src/pages/SharedTasks/SharedTasks.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport './SharedTasks.scss';\nimport axios from 'axios';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SharedTasks = () => {\n  _s();\n  const [groups, setGroups] = useState([]);\n  const [sharedTasks, setSharedTasks] = useState([]);\n  const [currentGroup, setCurrentGroup] = useState('');\n  const [text, setText] = useState('');\n  const {\n    userId\n  } = 'something';\n  {/* const {userId} = currentGroup._id */}\n  const onOptionChangeHandler = event => {\n    setCurrentGroup(event.target.value);\n  };\n  {/* here we using the exact same logic for creating and modifying TODOS, but this time, our userId \n      with wich we will be using for searching, creating the todos is actually an a groupId*/}\n  const getGroup = useCallback(async () => {\n    try {\n      await axios.get('api/group', {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        params: {\n          userId\n        }\n      }).then(response => setGroups(response.data));\n    } catch (error) {\n      console.log(error);\n    }\n  }, [userId]);\n  const getTodo = useCallback(async () => {\n    try {\n      await axios.get('api/sharedtodo', {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        params: {\n          userId\n        }\n      }).then(response => setSharedTasks(response.data));\n    } catch (error) {\n      console.log(error);\n    }\n  }, [userId]);\n  const createTodo = useCallback(async () => {\n    if (!text) return null;\n    try {\n      await axios.post('api/sharedtodo/add', {\n        text: text,\n        userId: userId\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        setSharedTasks([...sharedTasks], response.data);\n        setText('');\n        getTodo();\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, [text, userId, sharedTasks, getTodo]);\n  const removeTodos = useCallback(async id => {\n    try {\n      await axios.delete(`api/sharedtodo/delete/${id}`, {\n        id\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(() => getTodo());\n    } catch (error) {\n      console.log(error);\n    }\n  }, [getTodo]);\n  const completedTodo = useCallback(async id => {\n    try {\n      await axios.put(`api/sharedtodo/complete/${id}`, {\n        id\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        setSharedTasks([...sharedTasks], response.data);\n        getTodo();\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, [getTodo, sharedTasks]);\n  const importantTodo = useCallback(async id => {\n    try {\n      await axios.put(`api/sharedtodo/important/${id}`, {\n        id\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        setSharedTasks([...sharedTasks], response.data);\n        getTodo();\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, [getTodo, sharedTasks]);\n  useEffect(() => {\n    getGroup();\n  }, [getGroup]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select a group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todos\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: onOptionChangeHandler,\n            children: groups.map((groups, index) => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                children: groups.groupName\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 20\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this);\n};\n_s(SharedTasks, \"NHVO3UuaJq6f16QJjNnRnaXPHZ4=\");\n_c = SharedTasks;\nexport default SharedTasks;\nvar _c;\n$RefreshReg$(_c, \"SharedTasks\");","map":{"version":3,"names":["React","useState","useCallback","axios","useEffect","SharedTasks","groups","setGroups","sharedTasks","setSharedTasks","currentGroup","setCurrentGroup","text","setText","userId","onOptionChangeHandler","event","target","value","getGroup","get","headers","params","then","response","data","error","console","log","getTodo","createTodo","post","removeTodos","id","delete","completedTodo","put","importantTodo","map","index","groupName"],"sources":["/Users/semen/Desktop/Organaizer Application/client/src/pages/SharedTasks/SharedTasks.jsx"],"sourcesContent":["import React, {useState, useCallback} from 'react'\nimport './SharedTasks.scss'\nimport axios from 'axios'\nimport { useEffect } from 'react'\n\nconst SharedTasks = () => {\n\n    const [groups, setGroups] = useState([])\n    \n    const [sharedTasks, setSharedTasks] = useState([])\n    const [currentGroup, setCurrentGroup] = useState('')\n    const [text, setText] = useState('')\n    const {userId} = 'something'\n{/* const {userId} = currentGroup._id */}\n\n    const onOptionChangeHandler = (event) => {\n        setCurrentGroup(event.target.value)\n    }\n\n    {/* here we using the exact same logic for creating and modifying TODOS, but this time, our userId \n        with wich we will be using for searching, creating the todos is actually an a groupId*/}\n\n    const getGroup = useCallback(async () =>{\n        try {\n            await axios.get('api/group', {\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                params: {userId}\n            })\n            .then((response) => setGroups(response.data))\n        } catch (error) {\n            console.log(error)\n        }\n    }, [userId])\n\n    const getTodo = useCallback(async () =>{\n        try {\n            await axios.get('api/sharedtodo', {\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                params: {userId}\n            })\n            .then((response) => setSharedTasks(response.data))\n        } catch (error) {\n            console.log(error)\n        }\n    }, [userId])\n\n\n    const createTodo = useCallback(async () => {\n        if(!text) return null\n        try {\n            await axios.post('api/sharedtodo/add', {text : text, userId: userId}, {\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n            .then((response) => {\n                setSharedTasks([...sharedTasks], response.data)\n                setText('')\n                getTodo()\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }, [text, userId, sharedTasks, getTodo])\n\n    const removeTodos = useCallback(async (id) =>{\n        try {\n            await axios.delete(`api/sharedtodo/delete/${id}`, {id}, {\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n            .then(() => getTodo())\n        } catch (error) {\n            console.log(error)\n        }\n    }, [getTodo])\n\n    const completedTodo = useCallback(async (id) => {\n        try {\n            await axios.put(`api/sharedtodo/complete/${id}`, {id}, {\n                headers: {\n                    'Content-Type': 'application/json'\n                } \n            })\n            .then(response => {\n                setSharedTasks([...sharedTasks], response.data)\n                getTodo()\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }, [getTodo, sharedTasks])\n\n    const importantTodo = useCallback(async (id) => {\n        try {\n            await axios.put(`api/sharedtodo/important/${id}`, {id}, {\n                headers: {\n                    'Content-Type': 'application/json'\n                } \n            })\n            .then(response => {\n                setSharedTasks([...sharedTasks], response.data)\n                getTodo()\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }, [getTodo, sharedTasks])\n\n    useEffect(() => {\n        getGroup()\n    }, [getGroup])\n\n    return(\n        <div className='container'>\n            <div className='main-page'>\n    \n            <h3>Select a group</h3>\n            \n                <div className=\"todos\">\n                <form>\n            <select onChange={onOptionChangeHandler}\n                    > \n                    {/* here we need to set the default value for the selecter, otherwise the current group would be undefined\n                    userId declaration will try to destruct currentGroup._id, which is impossible due to its being undefined*/}   \n                    {/* for whatever reason, selecter is still not rendering*/} \n\n                                                \n            { groups.map((groups, index) => {\n            return(<option key={index}>{groups.groupName}</option>)}) }\n            </select>\n            </form>\n\n            {/* the above code should work only in case selecter is working !!!!!!!!!!!!!!!!!\n            </div>\n                <h3>Your tasks</h3>\n                <div className=\"todos\">\n                    {\n                        sharedTasks.map((todo, index) => {\n                            let cls = ['row flex todos-item']\n                                if(todo.completed) {\n                                    cls.push('completed')\n                                }\n                                if(todo.important) {\n                                    cls.push('important')\n                                }\n\n                            return(\n                            <div className={cls.join(' ')} key={index}>\n                                <div className=\"col todos-num\">{index+1}</div>\n                                <div className=\"col todos-text\">{todo.text}</div>\n                                <div className=\"col todos-buttons\"></div>\n                                <i className=\"material-icons blue-text\" onClick={() => completedTodo(todo._id)}>check</i>\n                                <i className=\"material-icons orange-text\" onClick={() => importantTodo(todo._id)}>warning</i>\n                                <i className=\"material-icons red-text\" onClick={() => removeTodos(todo._id)}>delete</i>\n                    </div>\n                        )}\n                        )}\n                </div>\n                <div className='container'>\n            <div className='main-page'>\n                <h4>Add task</h4>\n                <form className='form form-login' onSubmit={e => e.preventDefault()}>\n                    <div className='row'>\n                        <div className='input-field col s12'>\n                            <input type='text'\n                                   id='text'\n                                   name='input'\n                                   className='validate'\n                                   value={text}\n                                   onChange={e => setText(e.target.value)}\n                                   />\n                                   <label htmlFor='input'>Task</label>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <button\n                                className='waves-effect waves-light btn blue'\n                                onClick={createTodo}\n                                >Add task</button>\n                    </div>\n                </form>\n            </div>\n                            */}\n                            </div>\n            </div>\n            \n        </div>\n    )\n\n}\n\nexport default SharedTasks"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}